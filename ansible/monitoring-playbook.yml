- hosts: group_Name_master
  become: true
  gather_facts: true
  tasks:
    - name: Install required packages
      apt:
        name:
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Add Prometheus Helm repository
      command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

    - name: Add Grafana Helm repository
      command: helm repo add grafana https://grafana.github.io/helm-charts

    - name: Update Helm repositories
      command: helm repo update

    - name: Deploy Prometheus Helm chart
      command: helm upgrade --install prometheus prometheus-community/prometheus  --create-namespace --kubeconfig /home/ubuntu/.kube/config

    - name: Deploy Grafana Helm chart
      command: helm upgrade --install grafana grafana/grafana  --create-namespace --kubeconfig /home/ubuntu/.kube/config

    - name: Check for Prometheus server pods
      command: kubectl get pods -n default -l app=prometheus-server --kubeconfig /home/ubuntu/.kube/config
      register: prometheus_pods
      ignore_errors: true

    - name: Get Prometheus server pod name
      command: kubectl get pods -n default -l app=prometheus-server -o jsonpath="{.items[0].metadata.name}" --kubeconfig /home/ubuntu/.kube/config
      register: prometheus_pod_name
      when: prometheus_pods.rc == 0 and prometheus_pods.stdout != ""

    - name: Fail if Prometheus pod not found
      fail:
        msg: "No Prometheus server pod found. Check the installation."
      when: prometheus_pod_name is not defined

    - name: Check for Grafana server pods
      command: kubectl get pods -n default -l app=grafana --kubeconfig /home/ubuntu/.kube/config
      register: grafana_pods
      ignore_errors: true

    - name: Get Grafana server pod name
      command: kubectl get pods -n default -l app=grafana -o jsonpath="{.items[0].metadata.name}" --kubeconfig /home/ubuntu/.kube/config
      register: grafana_pod_name
      when: grafana_pods.rc == 0 and grafana_pods.stdout != ""

    - name: Fail if Grafana pod not found
      fail:
        msg: "No Grafana server pod found. Check the installation."
      when: grafana_pod_name is not defined

    - name: Expose Prometheus using port-forwarding
      command: kubectl port-forward svc/prometheus-server 9090:80 --kubeconfig /home/ubuntu/.kube/config
      async: 0
      poll: 0
      register: port_forward_prometheus

    - name: Expose Grafana using port-forwarding
      command: kubectl port-forward svc/grafana 3000:80 --kubeconfig /home/ubuntu/.kube/config
      async: 0
      poll: 0
      register: port_forward_grafana
